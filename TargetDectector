import cv2
import numpy as np
import math
Video_capture = cv2.VideoCapture(0)

while(True):
        cv2.namedWindow('Threshed', cv2.WINDOW_AUTOSIZE)
        cv2.namedWindow("Live Feed", cv2.WINDOW_AUTOSIZE)
        cv2.namedWindow('Contours', cv2.WINDOW_AUTOSIZE)
        ret, frame = Video_capture.read()
        horizCenter = np.size(frame, 0)/2
        verticenter = np.size(frame, 1)/2

        hsv_img = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

        THRESHOLD_MIN = np.array([60, 5, 8],np.uint8)
        THRESHOLD_MAX = np.array([70, 15, 28],np.uint8)
        frame_threshed = cv2.inRange(hsv_img, THRESHOLD_MIN, THRESHOLD_MAX)



        cv2.imshow('Threshed', frame_threshed)
        image, contours, hierarchy = cv2.findContours(frame_threshed, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

        count = -1
        for cont in contours:
            count = count + 1
            epsilon = 0.1*cv2.arcLength(cont, True)
            approx = cv2.approxPolyDP(cont, epsilon, True)
            D = W*F/P
            if cv2.contourArea(approx) > 5000 and len(approx) == 4: 

                cv2.drawContours(image, contours, count, (255,255,255), 10)

